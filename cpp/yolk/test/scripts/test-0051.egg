void test(string name, object generator) {
  var result = string(name, ":");
  for (var i : generator) {
    result = string(result, i);
  }
  print(result);
}

int! countdown_explicit() {
  yield 3;
  yield 2;
  yield 1;
}
test("countdown_explicit", countdown_explicit());
///>countdown_explicit:321

int! countdown_while(int counter) {
  while (counter > 0) {
    yield counter;
    --counter;
  }
}
test("countdown_while", countdown_while(3));
///>countdown_while:321

int! countdown_do(int counter) {
  do {
    yield counter;
    --counter;
  } while (counter > 0);
}
test("countdown_do", countdown_do(3));
///>countdown_do:321

int! countdown_for(int counter) {
  for (var i = counter; i > 0; --i) {
    yield i;
  }
}
test("countdown_for", countdown_for(3));
///>countdown_for:321

int! countdown_break(int counter) {
  for (;;) {
    yield counter;
    --counter;
    if (counter < 1) {
      yield break;
    }
  }
}
test("countdown_break", countdown_break(3));
///>countdown_break:321

int! countdown_continue(int counter) {
  for (; counter > 0; --counter) {
    yield counter;
    yield continue;
  }
}
test("countdown_continue", countdown_continue(3));
///>countdown_continue:321

int! countdown_array() {
  yield ...[3,2,1];
}
test("countdown_array", countdown_array());
///>countdown_array:321

any! countdown_arraywise(int[] array) {
  yield array;
}
test("countdown_arraywise", countdown_arraywise([3,2,1]));
///>countdown_arraywise:[3,2,1]

any! countdown_elementwise(int[] array) {
  yield ...array;
}
test("countdown_elementwise", countdown_elementwise([3,2,1]));
///>countdown_elementwise:321

int! countdown_any(any value) {
  yield ...value;
}
test("countdown_any_array", countdown_any([3,2,1]));
///>countdown_any_array:321

test("countdown_any_string", countdown_any("321"));
///>countdown_any_string:321

test("countdown_any_integer", countdown_any(321));
///<RUNTIME><ERROR><RESOURCE>(83,3-7): Cannot 'yield ...' multiple values from a value of type 'int'
